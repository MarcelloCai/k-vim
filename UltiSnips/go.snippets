snippet pa
package main

import (
    "fmt"
	)

func main(){
    ${1}
}
endsnippet

snippet forr "For range loop" b
for ${2:name} := range ${1:collection} {
	${0:${VISUAL}}
}
endsnippet

snippet if "If statement" b
if ${1:condition}${1/(.+)/ /}{
	${0:${VISUAL}}
}
endsnippet

snippet switch "Switch statement" b
switch ${1:expression}${1/(.+)/ /}{
case${0}
}
endsnippet

snippet select "Select statement" b
select {
case${0}
}
endsnippet

snippet case "Case clause" b
case ${1:condition}:
	${0:${VISUAL}}
endsnippet

snippet default "Default clause" b
default:
	${0:${VISUAL}}
endsnippet

# functions
snippet /^main/ "Main function" r
func main() {
	${0:${VISUAL}}
}
endsnippet

snippet /^meth/ "Method" r
func (${1:receiver} ${2:type}) ${3:name}(${4:params})${5/(.+)/ /}${5:type} {
	${0:${VISUAL}}
}
endsnippet

snippet func "Function" b
func ${1:name}(${2:params})${3/(.+)/ /}${3:type} {
	${0:${VISUAL}}
}
endsnippet

# types and variables
snippet map "Map type" b
map[${1:keytype}]${2:valtype}
endsnippet

snippet : "Variable declaration :=" b
${1:name} := ${0:value}
endsnippet

snippet var "Variable declaration" b
var ${1:name}${2/(.+)/ /}${2:type}${3: = ${0:value}}
endsnippet

snippet vars "Variables declaration" b
var (
	${1:name}${2/(.+)/ /}${2:type}${3: = ${0:value} }
)
endsnippet

snippet fpl
fmt.Println("${1}")
endsnippet

snippet fpf
fmt.Printf("${1}", ${2})
endsnippet

snippet err
if err != nil {
    ${1}
}
endsnippet

snippet /*
/*
${1}


*/
endsnippet


